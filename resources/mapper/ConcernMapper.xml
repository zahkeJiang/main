<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpygh.gzh.dao.ConcernMapper">
  <resultMap id="BaseResultMap" type="com.bjpygh.gzh.bean.Concern">
    <id column="concern_id" jdbcType="BIGINT" property="concernId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="concerned" jdbcType="BIT" property="concerned" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    concern_id, user_id, openid, is_delete, concerned, create_time
  </sql>
  <select id="selectByExample" parameterType="com.bjpygh.gzh.bean.ConcernExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from concern
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from concern
    where concern_id = #{concernId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from concern
    where concern_id = #{concernId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bjpygh.gzh.bean.ConcernExample">
    delete from concern
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bjpygh.gzh.bean.Concern">
    insert into concern (concern_id, user_id, openid, 
      is_delete, concerned, create_time
      )
    values (#{concernId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{openid,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=BIT}, #{concerned,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bjpygh.gzh.bean.Concern">
    insert into concern
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="concernId != null">
        concern_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="concerned != null">
        concerned,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="concernId != null">
        #{concernId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="concerned != null">
        #{concerned,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bjpygh.gzh.bean.ConcernExample" resultType="java.lang.Long">
    select count(*) from concern
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update concern
    <set>
      <if test="record.concernId != null">
        concern_id = #{record.concernId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.concerned != null">
        concerned = #{record.concerned,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update concern
    set concern_id = #{record.concernId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      openid = #{record.openid,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=BIT},
      concerned = #{record.concerned,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
    <select id="selectConcerned" resultType="com.bjpygh.gzh.bean.Concern">
        SELECT * FROM concern WHERE now()-TIMESTAMP(create_time) > 2592000000 AND concerned = 0 AND is_delete=0
    </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjpygh.gzh.bean.Concern">
    update concern
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="concerned != null">
        concerned = #{concerned,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where concern_id = #{concernId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjpygh.gzh.bean.Concern">
    update concern
    set user_id = #{userId,jdbcType=BIGINT},
      openid = #{openid,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT},
      concerned = #{concerned,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where concern_id = #{concernId,jdbcType=BIGINT}
  </update>
</mapper>