<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpygh.gzh.dao.QrCodeMapper">
  <resultMap id="BaseResultMap" type="com.bjpygh.gzh.bean.QrCode">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="ticket" jdbcType="VARCHAR" property="ticket" />
    <result column="concern" jdbcType="INTEGER" property="concern" />
    <result column="unconcern" jdbcType="INTEGER" property="unconcern" />
    <result column="onconcern" jdbcType="INTEGER" property="onconcern" />
    <result column="concerned" jdbcType="INTEGER" property="concerned" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, ticket, concern, unconcern, onconcern, concerned
  </sql>
  <select id="selectByExample" parameterType="com.bjpygh.gzh.bean.QrCodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from qr_code
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from qr_code
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from qr_code
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bjpygh.gzh.bean.QrCodeExample">
    delete from qr_code
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bjpygh.gzh.bean.QrCode">
    insert into qr_code (user_id, ticket, concern, 
      unconcern, onconcern, concerned
      )
    values (#{userId,jdbcType=BIGINT}, #{ticket,jdbcType=VARCHAR}, #{concern,jdbcType=INTEGER}, 
      #{unconcern,jdbcType=INTEGER}, #{onconcern,jdbcType=INTEGER}, #{concerned,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bjpygh.gzh.bean.QrCode">
    insert into qr_code
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="ticket != null">
        ticket,
      </if>
      <if test="concern != null">
        concern,
      </if>
      <if test="unconcern != null">
        unconcern,
      </if>
      <if test="onconcern != null">
        onconcern,
      </if>
      <if test="concerned != null">
        concerned,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="ticket != null">
        #{ticket,jdbcType=VARCHAR},
      </if>
      <if test="concern != null">
        #{concern,jdbcType=INTEGER},
      </if>
      <if test="unconcern != null">
        #{unconcern,jdbcType=INTEGER},
      </if>
      <if test="onconcern != null">
        #{onconcern,jdbcType=INTEGER},
      </if>
      <if test="concerned != null">
        #{concerned,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bjpygh.gzh.bean.QrCodeExample" resultType="java.lang.Long">
    select count(*) from qr_code
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update qr_code
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.ticket != null">
        ticket = #{record.ticket,jdbcType=VARCHAR},
      </if>
      <if test="record.concern != null">
        concern = #{record.concern,jdbcType=INTEGER},
      </if>
      <if test="record.unconcern != null">
        unconcern = #{record.unconcern,jdbcType=INTEGER},
      </if>
      <if test="record.onconcern != null">
        onconcern = #{record.onconcern,jdbcType=INTEGER},
      </if>
      <if test="record.concerned != null">
        concerned = #{record.concerned,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update qr_code
    set user_id = #{record.userId,jdbcType=BIGINT},
      ticket = #{record.ticket,jdbcType=VARCHAR},
      concern = #{record.concern,jdbcType=INTEGER},
      unconcern = #{record.unconcern,jdbcType=INTEGER},
      onconcern = #{record.onconcern,jdbcType=INTEGER},
      concerned = #{record.concerned,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjpygh.gzh.bean.QrCode">
    update qr_code
    <set>
      <if test="ticket != null">
        ticket = #{ticket,jdbcType=VARCHAR},
      </if>
      <if test="concern != null">
        concern = #{concern,jdbcType=INTEGER},
      </if>
      <if test="unconcern != null">
        unconcern = #{unconcern,jdbcType=INTEGER},
      </if>
      <if test="onconcern != null">
        onconcern = #{onconcern,jdbcType=INTEGER},
      </if>
      <if test="concerned != null">
        concerned = #{concerned,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjpygh.gzh.bean.QrCode">
    update qr_code
    set ticket = #{ticket,jdbcType=VARCHAR},
      concern = #{concern,jdbcType=INTEGER},
      unconcern = #{unconcern,jdbcType=INTEGER},
      onconcern = #{onconcern,jdbcType=INTEGER},
      concerned = #{concerned,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>